graddata=read.csv(file="Admission_Predict_Ver1.1.csv",header=TRUE)
head(graddata)
hist(graddata$GRE.Score,main="GRE Score",xlab="Score")
hist(graddata$TOEFL.Score,main="TOEFL Score",xlab="Score")
barplot(table(graddata$University.Rating),main="University Rating",xlab="Rating (out of 5)")
hist(graddata$SOP,main="Statement of Purpose Strength",xlab="Strength (out of 5)")
hist(graddata$LOR,main="Letter of Recommendation Strength",xlab="Strength (out of 5)")
hist(graddata$CGPA,main="CGPA",xlab="CGPA")
hist(graddata$Chance.of.Admit,main="Probability of Admission",xlab="Probability")
barplot(c(sum(graddata$Research),sum(!graddata$Research)),names.arg=c("Research","No Research"),cex.names = 2,main="Count of Applicants with Research Experience")
meansd=matrix(c(mean(graddata$GRE.Score),mean(graddata$TOEFL.Score),mean(graddata$SOP),mean(graddata$LOR),mean(graddata$CGPA),mean(graddata$Chance.of.Admit),sd(graddata$GRE.Score),sd(graddata$TOEFL.Score),sd(graddata$SOP),sd(graddata$LOR),sd(graddata$CGPA),sd(graddata$Chance.of.Admit)),ncol=6)
colnames(meansd)=c("GRE","TOEFL","SOP","LOR","CGPA","Prob. Admit")
rownames(meansd)=c("mean","sd")
meansd
boxplot(graddata$GRE.Score,main="GRE Scores")
summary(graddata$GRE.Score)
gretoe=lm(data=graddata,GRE.Score~TOEFL.Score)
plot(graddata$TOEFL.Score,graddata$GRE.Score,xlab="TOEFL Score",ylab="GRE Score")
abline(gretoe)
summary(gretoe)
resids=residuals(gretoe)
plot(graddata$TOEFL.Score,resids,xlab="TOEFL Scores",ylab="Residuals")
upperconflev=mean(graddata$GRE.Score)+qt(.975,df=length(graddata$GRE.Score))*sd(graddata$GRE.Score)/sqrt(length(graddata$GRE.Score))
lowerconflevel=mean(graddata$GRE.Score)-qt(.975,df=length(graddata$GRE.Score))*sd(graddata$GRE.Score)/sqrt(length(graddata$GRE.Score))
researchgrads=graddata$GRE.Score[graddata$Research==1]
norgrads=graddata$GRE.Score[graddata$Research==0]
hist(researchgrads,col=adjustcolor("red",0.5),xlab="GRE Score",main="Histogram of GRE Scores by Research Experience")
hist(norgrads,col=adjustcolor("blue",0.5),add=TRUE)
legend("topright",fill=adjustcolor(c("red","blue"),0.5),legend=c("Research","No Research"))
tstat=t.test(researchgrads,norgrads,paired=FALSE)
tstat$statistic
shuffler=function(){
research=sample(graddata$Research)
tstatshuf=t.test(graddata$GRE.Score[research==0],graddata$GRE.Score[research==1])
return(tstatshuf$statistic)
}
t_shuffled=replicate(10000,shuffler())
hist(t_shuffled,xlab="t-statistic",main="histogram of simulated t-statistics",xlim=c(-4,16))
abline(v=tstat$statistic,col="red")
summary=summary(gretoe)
beta=coefficients(gretoe)[1]
slopetstat=(beta-0)/5.02069
pvalslope=pt(slopetstat,df=length(graddata$Serial.No.))
library("rstan")
library("rstan")
getwd()
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
pkgbuild::has_build_tools(debug = TRUE)
install.packages("castor")
library(castor)
install.packages(c("bayesplot", "boot", "callr", "checkmate", "cluster", "digest", "dplyr", "DT", "evaluate", "ggplot2", "knitr", "markdown", "mime", "nlme", "openssl", "pillar", "processx", "rlang", "rmarkdown", "rstan", "StanHeaders", "tibble", "tinytex", "vctrs", "xfun", "zoo"))
install.packages("diversitree")
library(diversitree)
diversitree
diversitree-package
load(diversitree)
library(diversitree)
diversitree
help(diversitree)
help(diversitree)
library(castor)
install.packages("RPANDA")
library(RPANDA)
install.packages("BAMMtools")
require("BAMMtools")
library(phytools)
install.packages("mvMORPH")
require("RPANDA")
require("diversitree")
require("BAMMtools")
require("castor")
require("mvMORPH")
tree=pbtree(n=50)
View(tree)
source('~/Desktop/ProjectScripts/RPANDA.R')
View(random_data)
source('~/Desktop/ProjectScripts/RPANDA.R')
View(result_exp)
source('~/Desktop/ProjectScripts/RPANDA.R')
View(random_data)
source('~/Desktop/ProjectScripts/RPANDA.R')
View(random_data)
View(random_data)
View(random_data)
View(random_data)
View(random_data)
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
View(random_data)
t <- 1:100  # time
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
View(random_data)
source('~/Desktop/ProjectScripts/RPANDA.R')
View(random_data)
plot(t, x, type = "l", ylim = c(-2+30, 2+30))
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
View(result_exp)
View(result_exp)
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
View(result_exp)
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
type(result_exp[0])
typeof(result_exp[0])
typeof(result_exp[0][0])
typeof(result_exp[0][0][0])
typeof(result_exp[0][0][0][0])
result_exp[0]
source('~/Desktop/ProjectScripts/RPANDA.R')
typeof(result_exp)
result_exp[0]
result_exp[[0]]
result_exp[[1]]
typeof(result_exp[[1]])
source('~/Desktop/ProjectScripts/RPANDA.R')
typeof(result_exp[[1]])
result_exp[[1]]
phylo.plot(result_exp[[1]])
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
plot.phylo(result_exp[[1]])
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
View(result_exp)
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
R.version
install.packages("installr"); library(installr)
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
the_fit=fit_env(phylo=result_exp[[1]],tot_time=max(node.age(phylo)$ages),env_data=random_data,f.lamb=f.lamb,f.mu=f.mu,lamb_par=lamb_par,mu_par=mu_par)
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
source('~/Desktop/ProjectScripts/RPANDA.R')
version
install.packages(c("boot", "foreign", "nlme"))
install.packages("remotes")
remotes::install_github("markrobinsonuzh/treeAGG")
source('~/Desktop/ProjectScripts/ProjectSix.R')
setwd("~/Desktop/ProjectScripts")
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
View(result_exp)
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
View(mat)
source('~/Desktop/ProjectScripts/ProjectSix.R')
View(mat)
help("treeAGG")
source('~/Desktop/ProjectScripts/ProjectSix.R')
help("matTree")
View(random_data)
View(mat)
mat[1][1]
mat[-1][-1]
mat[length(mat)]
View(result_exp)
result_exp[["nblineages"]]
result_exp[["nblineages"]][-1]
result_exp[["nblineages"]][length(result_exp[["nblineages"]])]
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
mat[1,5]
mat[1,4]
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
View(result_exp)
View(result_exp)
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
View(treeNodes)
treeNodes[["nodes"]]
treeNodes[["root"]]
treeNodes[["names"]]
View(result_exp)
result_exp[["tree"]][["edge.length"]]
source('~/Desktop/ProjectScripts/ProjectSix.R')
View(treeNodes)
treeNodes[["nodes"]]
View(result_exp)
result_exp[["times"]]
result_exp[["tree"]][["edge.length"]]
View(treeNodes)
treeNodes[["nodes"]]
newickformat
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
newickformat
substr(1,len(newickformat)-2)
substr(1,length(newickformat)-2)
substr(newickformar,1,length(newickformat)-2)
substr(newickformat,1,length(newickformat)-2)
substr(newickformat,start=1,stop=length(newickformat)-2)
substr(newickformat,start=1,stop=length(newickformat)-2)
strsplit(newickformat,"\n")
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
treeNodes=read.tree.nodes(newickformat)
source('~/Desktop/ProjectScripts/ProjectSix.R')
newickformat
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
View(nodematrix)
nodematrix[["nodes"]]
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
View(nodematrix)
nodematrix[["names"]]
nodematrix
nodematrix[["nodes"]]
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
nodematrix
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
nodematrix
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
nodematrix[1,1]
nodematrix[1][1]
nodematrix[1][1][1]
source('~/Desktop/ProjectScripts/ProjectSix.R')
length(mat)
mat
length(mat[1])
source('~/Desktop/ProjectScripts/ProjectSix.R')
nodematrix$nodes
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
View(result_exp)
source('~/Desktop/ProjectScripts/ProjectSix.R')
View(nodematrix)
nodematrix[["nodes"]]
View(result_exp)
result_exp[[3]]
pop(result_exp[[3]])
tail(result_exp[[3]],n=1)
help(rep)
rep(3,3)
type(rep(3,3))
type(rep([3],3))
rep([3],3)
c(rep(3,3))
type(c(rep(3,3)))
source('~/Desktop/ProjectScripts/ProjectSix.R')
View(nodematrix)
View(mat)
View(mat)
View(nodematrix)
1:4
View(nodematrix)
nodematrix[["nodes"]]
nodematrix%nodes
nodematrix$nodes
source('~/Desktop/ProjectScripts/ProjectSix.R')
nodematrix%nodes
nodematrix$nodes
source('~/Desktop/ProjectScripts/ProjectSix.R')
nodematrix$nodes
source('~/Desktop/ProjectScripts/ProjectSix.R')
nodematrix$nodes
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
View(genetreestuff)
genetreestuff[["node"]]
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
View(result_exp)
tail(result_exp[[3]],n=1)
result_exp[[3]]
plot.phylo(result_exp[[1]])
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
rep(1,nrow(mat))
View(nodematrix)
View(genetreestuff)
genetreestuff[["node"]]
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
rootnode
mat[length(mat)]
mat
nodematrix$nodes
nodematrix$nodes[nrow(nodematrix$nodes)-1,1]
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
nspecies
rootnode
nodematrix$nodes
nrow(nodematrix$nodes)
source('~/Desktop/ProjectScripts/ProjectSix.R')
specnames
nodematrix$nodes
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
type(thetree)
View(thetree)
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
nrow(nodematrix$nodes)
i
View(result_exp)
result_exp[["times"]]
result_exp[["tree"]][["edge.length"]]
result_exp[["times"]]
View(genetreestuff)
View(thetree)
result_exp[["tree"]][["edge.length"]]
thetree[["edge.length"]]
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
View(thetree)
thetree[["edge.length"]]
9.802943+0.286612
node.depth.edgelength(thetree)
node.depth.edgelength(result_exp[[1]])
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
newickformat
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
strsplit(newickformat,"\n")
nodematrix=read.tree.nodes(strsplit(newickformat,"\n"))
source('~/Desktop/ProjectScripts/ProjectSix.R')
newickformat
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
read.tree.string(file="newick1.txt")
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
newickformat
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
newickfromat
newickformat
source('~/Desktop/ProjectScripts/ProjectSix.R')
newickformat
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
newickfromaty
newickformat
strsplit(newickformat,"\n")
read.tree.nodes(strsplit(newickformat,"\n"))
type(bigtree)
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
newickfromat
newickformat
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
newickformat$tree
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
newickformat
source('~/Desktop/ProjectScripts/ProjectSix.R')
nodematrix$nodes
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
nodematrix
species.name(newickformat)
1:20
source('~/Desktop/ProjectScripts/ProjectSix.R')
nrow(length(bigtree$tip.label))
source('~/Desktop/ProjectScripts/ProjectSix.R')
length(bigtree$tip.label)
read.tree.nodes(newickformat)
newickformat
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
bigtree$tip.label
double(bigtree$tip.label)
as.integer(bigtree$tip.label)
source('~/Desktop/ProjectScripts/ProjectSix.R')
type(as.integer(bigtree$tip.label))
type(1:20)
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/ProjectSix.R')
source('~/Desktop/ProjectScripts/Project6V1.R')
source('~/Desktop/ProjectScripts/Project6V1.R')
source('~/Desktop/ProjectScripts/Project6V1.R')
source('~/Desktop/ProjectScripts/Project6V1.R')
source('~/Desktop/ProjectScripts/Project6V1.R')
source('~/Desktop/ProjectScripts/Project6V1.R')
source('~/Desktop/ProjectScripts/Project6V1.R')
source('~/Desktop/ProjectScripts/Project6V1.R')
source('~/Desktop/ProjectScripts/Project6V1.R')
source('~/Desktop/ProjectScripts/Project6V1.R')
source('~/Desktop/ProjectScripts/Project6V1.R')
source('~/Desktop/ProjectScripts/Project6V1.R')
source('~/Desktop/ProjectScripts/Project6V1.R')
source('~/Desktop/ProjectScripts/Project6V1.R')
source('~/Desktop/ProjectScripts/Project6V1.R')
source('~/Desktop/ProjectScripts/Project6V1.R')
source('~/Desktop/ProjectScripts/Project6V1.R')
source('~/Desktop/ProjectScripts/Project6V1.R')
source('~/Desktop/ProjectScripts/Project6V1.R')
nodematrix$nodes
nodematrix[nodes]
nodematrix[[nodes]]
nodematrix[["nodes"]]
nodematrix["nodes"]
type(nodematrix[["nodes"]])
type(nodematrix["nodes"])
source('~/Desktop/ProjectScripts/Project6V1.R')
source('~/Desktop/ProjectScripts/Project6V1.R')
source('~/Desktop/ProjectScripts/Project6V1.R')
